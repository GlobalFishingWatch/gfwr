% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_event.R
\name{get_event}
\alias{get_event}
\title{Base function to get event from API and convert response to data frame}
\usage{
get_event(
  event_type = "port_visit",
  vessel = NULL,
  include_regions = NULL,
  start_date = NULL,
  end_date = NULL,
  confidences = NULL,
  key = gfw_auth(),
  quiet = FALSE
)
}
\arguments{
\item{event_type}{Type of event to get data of. One of "port_visit", "encounter", "loitering, or "fishing"}

\item{vessel}{VesselID. How to get this?}

\item{include_regions}{Whether to include regions? Ask engineering if this can always be false}

\item{start_date}{Start of date range to search events}

\item{end_date}{End of date range to search events}

\item{confidences}{Confidence levels (1-4) of events (port visits only).}

\item{key}{Authorization token. Can be obtained with gfw_auth function}

\item{quiet}{Boolean. Whether to print the number of events returned by the request.}
}
\description{
Base function to get event from API and convert response to data frame
}
\details{
There are currently four available event types and these events are provide for three
vessel types - fishing, carrier, and support vessels.
Fishing events (\code{event_type = 'fishing'}) are specific to fishing vessels and loitering
events (\code{event_type = 'loitering'}) are specific to carrier vessels. Port visits
(\code{event_type = 'port_visit'}) and encounters (\code{event_type = 'encounter'}) are available
for all vessel types. For more details about the various event types, see the \href{https://globalfishingwatch.org/our-apis/documentation#data-caveat}{GFW API documentation}.

Encounter events involve multiple vessels and one row is returned for each vessel involved in an encounter.
For example, an encounter between a carrier and fishing vessel (\code{carrier-fishing}) will have one
row for the fishing vessel and one for the carrier vessel. The \code{id} field for encounter events has
two components separated by a \code{.}. The first component is the unique id for the encounter event and will be
the same for all vessels involved in the encounter. The second component is an integer used to distinguish between
different vessels in the encounter.
}
