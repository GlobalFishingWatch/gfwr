% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gfw_sar_presence.R
\name{gfw_sar_presence}
\alias{gfw_sar_presence}
\title{Retrieve vessel presence detected using SAR and convert response to tibble}
\usage{
gfw_sar_presence(
  spatial_resolution = NULL,
  temporal_resolution = NULL,
  start_date = NULL,
  end_date = NULL,
  region_source = NULL,
  region = NULL,
  group_by = NULL,
  filter_by = NULL,
  key = gfw_auth(),
  print_request = FALSE
)
}
\arguments{
\item{spatial_resolution}{Raster spatial resolution. Can be \code{"LOW"} (0.1 degree)
or \code{"HIGH"} (0.01 degree).}

\item{temporal_resolution}{Raster temporal resolution. Can be \code{"HOURLY"},
\code{"DAILY"}, \code{"MONTHLY"}, \code{"YEARLY"}.}

\item{start_date}{Required. Start of date range to search events, in
YYYY-MM-DD format and including this date.}

\item{end_date}{Required. End of date range to search events, in
YYYY-MM-DD format and excluding this date.}

\item{region_source}{Required. Source of the region: \code{"EEZ"}, \code{"MPA"},
\code{"RFMO"} or \code{"USER_SHAPEFILE"}.}

\item{region}{Required. If \code{region_source} is set to \code{"EEZ"}, \code{"MPA"} or
\code{"RFMO"}, GFW region code (see \code{\link[=gfw_region_id]{gfw_region_id()}}). If
\code{region_source = "USER_SHAPEFILE"}, \code{sf} shapefile with the area of interest.}

\item{group_by}{Optional. Parameter to group by. Can be \code{"VESSEL_ID"}, \code{"FLAG"},
\code{"GEARTYPE"}, \code{"FLAGANDGEARTYPE"} or \code{"MMSI"}.}

\item{filter_by}{Fields to filter AIS-based apparent fishing effort. Possible
options are \code{flag}, \code{shipname}, \code{geartype} and \code{id} (to filter for vessel ids). Receives SQL expressions like
\code{filter_by = "flag IN ('ESP')"}.}

\item{key}{Character, API token. Defaults to \code{\link[=gfw_auth]{gfw_auth()}}.}

\item{print_request}{Boolean. Whether to print the request, for debugging
purposes. When contacting the GFW team it will be useful to send this string.}
}
\description{
Retrieve vessel presence detected using SAR and convert response to tibble
}
\examples{
\dontrun{
library(gfwr)
# using region codes
code_eez <- gfw_region_id(region_name = "CIV", region_source = "EEZ")
gfw_sar_presence(spatial_resolution = "LOW",
           temporal_resolution = "YEARLY",
           group_by = "FLAG",
           start_date = "2021-01-01",
           end_date = "2022-01-01",
           region = code_eez$id,
           region_source = "EEZ",
           key = gfw_auth(),
           print_request = TRUE)
code_mpa <- gfw_region_id(region_name = "Galapagos", region_source = "MPA")
gfw_sar_presence(spatial_resolution = "LOW",
           temporal_resolution = "MONTHLY",
           group_by = "FLAG",
           start_date = "2022-01-01",
           end_date = "2023-01-01",
           region = code_mpa$id[3],
           region_source = "MPA")
code_rfmo <- gfw_region_id(region_name = "IATTC", region_source = "RFMO")
gfw_sar_presence(spatial_resolution = "LOW",
           temporal_resolution = "MONTHLY",
           start_date = "2022-01-01",
           end_date = "2023-01-01",
           region = code_rfmo$id[1],
           region_source = "RFMO")
#using a sf from disk /loading a test sf object
data(test_shape)
gfw_sar_presence(spatial_resolution = "LOW",
            temporal_resolution = "YEARLY",
            start_date = "2021-01-01",
            end_date = "2021-10-01",
            region = test_shape,
            region_source = "USER_SHAPEFILE",
            print_request = TRUE)
}
}
